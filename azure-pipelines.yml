# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pr: none
trigger:
  - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: subscriptionId
    value: '73352462-5185-4eab-afca-eed6b857bbe0'
  - name: resourceGroup
    value: 'BackendRewrite'
  - name: containerRegistryNameDev
    value: crbackendrewritedev
  - name: containerConnectionDev
    value: '{"loginServer":"$(containerRegistryNameDev).azurecr.io", "id" : "/subscriptions/$(subscriptionId)/resourceGroups/$(resourceGroup)/providers/Microsoft.ContainerRegistry/registries/$(containerRegistryNameDev)"}'

steps:
  - task: MavenAuthenticate@0
    inputs:
      artifactsFeeds: 'ikea'
  
  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.17'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      goals: 'package'
  
  - task: CopyFiles@2
    displayName: 'Copy files to staging folder'
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**/*.jar'
      TargetFolder: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()
    
  - task: CopyFiles@2
    displayName: 'Copy docker file to staging folder'
    inputs:
      SourceFolder: '$(Build.SourcesDirectory)'
      Contents: '**/Dockerfile'
      TargetFolder: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: icomdev.pam-asset-type-service'
    inputs:
      PathtoPublish: '$(build.artifactstagingdirectory)'
    condition: succeededOrFailed()
  
  # Build container image DEV
  - task: Docker@0
    displayName: 'Build an image for dev'
    inputs:
      azureSubscription: 'sc-oneui-ikeaorderandcreate-nonprd'
      dockerFile: '**/Dockerfile'
      imageName: $(Build.Repository.Name):$(Build.BuildId)
      action: 'Build an image'
      azureContainerRegistry: $(containerConnectionDev)
      includeLatestTag: true
  
  # Push container image DEV
  - task: Docker@0
    displayName: 'Push an image to dev'
    inputs:
      azureSubscription: 'sc-oneui-ikeaorderandcreate-nonprd'
      imageName: $(Build.Repository.Name):$(Build.BuildId)
      azureContainerRegistry: $(containerConnectionDev)
      action: 'Push an image'
      includeLatestTag: true
